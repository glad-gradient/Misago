# This compose setup is only meant for local development of Misago itself
# This is not for running your Misago site in docker
version: "3.0"
services:
  postgres:
    image: postgres:10
    restart: unless-stopped
    env_file:
      - postgredb.env
    volumes:
      - /home/gradient/projects/nestlogic/spam_detector_eval/storage/postgresql/data/:/var/lib/postgresql/data/
    ports:
      - '127.0.0.1:5432:5432'

  bridge:
    image: 127.0.0.1:5000/bridge
    container_name: bridge
    build:
      context: ./
      dockerfile: bridge/Dockerfile
    env_file:
      - postgredb.env
    depends_on:
      - postgres
    tty: true
    restart: on-failure

  redis:
    image: redis:5
    restart: unless-stopped

  misago:
    build: .
    command: python manage.py runserver 0.0.0.0:8000
    env_file:
      - postgredb.env
      - superuser.env
    ports:
      # Map port 8000 in the container to port 8000 on the host
      # This way we can access the forum through http://localhost:8000
      - "${MISAGO_DEVSERVER_PORT:-8000}:8000"
    depends_on:
      - postgres
      - redis
    tty: true
    volumes:
      # Map in the entire project into the container
      # This makes sure files in the container updates on the fly as we were working locally
      - .:/srv/misago:Z
  celery:
    build: .
    command: celery -A devproject worker --loglevel=info
    env_file:
      - postgredb.env
    depends_on:
      - postgres
      - redis
    tty: true
    volumes:
      # Map in the entire project into the container
      # This makes sure files in the container updates on the fly as we were working locally
      - .:/srv/misago:Z